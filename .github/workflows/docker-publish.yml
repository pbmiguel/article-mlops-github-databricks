name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation .

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # docker settings
  REGISTRY: docker.io
  USERNAME_GITHUB: github_username # CHANGE TO YOUR USERNAME
  IMAGE_NAME: demo-python-publish-docker-img # CHANGE TO YOUR DESIRED IMAGE NAME
  DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
  DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
  DATABRICKS_USERNAME: ${{ secrets.DATABRICKS_USERNAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 'pypy-3.7' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - run: python -m pip install -r requirements.txt
      - run: |
          invoke deploy-to-databricks \
            --databricks-job-name "demo_python_docker_img_beta" \
            --python-path "/demo-python-docker-img/runner.py" \
            --python-params "--github_token ${{ secrets.TOKEN_GITHUB }} --github_pull_request_id ${{ github.event.pull_request.number }} --github_repo_name ${{ env.USERNAME_GITHUB }}/${{ github.event.repository.name }}" \
            --num-workers 0 \
            --docker-url "${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.pull_request.number }}" \
            --docker-username ${{ secrets.DOCKER_USERNAME }} \
            --docker-password ${{ secrets.DOCKER_TOKEN }}
